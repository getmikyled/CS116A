// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel FluidsIntegrate

struct Particle
{
    float pressure;
    float density;
    float3 currentForce;
    float3 velocity;
    float3 position;
};

RWStructuredBuffer<Particle> _particles;

// Declare variables
float particleMass;
float viscosity;
float gasConstant;
float restDensity;
float radius;
float radius2;
float radius3;
float radius4;
float radius5;
float pi;
int particleLength;
float timeStep;
float3 boxSize;

[numthreads(100,1,1)]
void Integrate (uint3 id: SV_PATCHTHREADID)
{
    // Set current force to gravity
    _particles[id.x].currentForce = float3(0, -9.81 * particleMass, 0); 
    
    float3 velocity = _particles[id.x].velocity + ((_particles[id.x].currentForce/particleMass) * timeStep); // (v + at)
    _particles[id.x].position = velocity * timeStep;

    // Add particle boundaries here if yo uwant
    
}